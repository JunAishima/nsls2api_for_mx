#!/opt/conda_envs/2023-3.2-py310/bin/python

#import ispyb_lib
import nsls2api_lib
import argparse
import sys

ispyb_beamlines = ["amx", "fmx", "nyx"]

def main(args=[]):
    parser = argparse.ArgumentParser(
        description="Update proposal information in ISPyB. Check whether these already exist."
    )
    parser.add_argument(
        "--cycle",
        type=str,
	default=nsls2api_lib.get_current_cycle(),
        help="The name of the proposal.",
    )
    parser.add_argument(
        "--dry-run",
        action="store_true",
        default=False,
        help="Dry run without adding proposals",
    )
    parser.add_argument(
        "--verbose",
        "-v",
        action="count",
        help="Show more log messages. (Use -vv for even more.)",
    )

    args = parser.parse_args(args or sys.argv[1:])
    if args.verbose:
        if args.verbose == 1:
            logging.basicConfig(level="INFO")
        if args.verbose == 2:
            logging.basicConfig(level="DEBUG")
        else:
            logging.basicConfig()  # "WARNING" by default

    cycle = args.cycle
    dry_run = args.dry_run

    print(f"Checking all proposals for cycle {cycle} that run on {ispyb_beamlines}")
    proposals = nsls2api_lib.get_proposals_for_cycle_instruments(cycle=cycle, instruments=ispyb_beamlines)
    if not dry_run:
        print("proposals to add to ISPyB: ")
    else:
        print("proposals to add to ISPyB - will not be done because this is a dry run:")
    for proposal in proposals:
        print(proposal,)
        if not dry_run:
            import ispyb_lib
            ispyb_lib.add_users_for_proposal(proposal, beamline)

if __name__ == "__main__":
    main()
